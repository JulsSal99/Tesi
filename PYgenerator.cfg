[global]
# if True, question order is random
random_q_order = False
# number of questions. positive number, negative act as a threshold for random, 0 is just random QUANTITY
n_questions = -2
# number of answers. positive number, negative act as a threshold for random, 0 is just random
#n_answers = 0
# Percentage initial question presence. 1 always, 0 never
#prob_init_question = 0.5
# Percentage question presence. 1 always, 0 never
#prob_question = 0.5
# probability an initial question will be followed by a new question
#prob_i_q = 0.8
# volume of answers. "ND" if NOT DEFINED, "L" if LOW volume, "H" if HIGH volume
volume = L

[files]
# file name format: *IDname_SESSO_volume_tipo_ndomanda". The number identifies the position
name_format = person_gender_type_question_volume
# master folder. Should NOT end with a "/"
dir_path = C:/Users/giuli/Music/Edit
# input files folder inside master folder
input_folder = INPUT
# output files folder inside master folder
output_folder = OUTPUT 
# custom user files. It is inside pycaches folder
#custom_files = "MY_FILES"

# silences values
[silences]
#min = 0.05
#max = 0.120

# long pauses (a pause between a question and another question without any initial question) values
[long pauses]
#min = 0.9
#max = 1.2

[pauses]
# pauses values
#min = 0.7
#max = 0.9

[sounds]
# This float value goes from 0 to 1. If 1, uses all sounds, if 0, none
#s_quantity = 1
# minimum distance between one sound and another in seconds
min_s_distance = 3
# redundancy before and after to avoid overlap sounds in seconds
cut_redundancy = 1
# lenght is fixed to not cause unuseful reads in seconds
length_sounds = 2
# placing gap at the end of the final file to avoid different lenghts in the final audio file in seconds
#end_tollerance = 3 
# how many times does the random function search for an empty space. Bigger values get better results, but a slower code
cycle_limit = 15
# decide if sounds can come from people not asking or answering questions 

# background noise for silences and pauses
[noise]
#enable_noise = True
#noise_file = "noise.wav"

[data]
# channels and sample rate of the project
# sample_rate = 0 
# if 0, get sample_rate from the first file
# channels = 0    
# if 0, get channels from the first file